<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.czy.bms.mapper.VehicleMapper">
  <resultMap id="BaseResultMap" type="com.czy.bms.entity.Vehicle">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="vid" jdbcType="SMALLINT" property="vid" />
    <result column="battery" jdbcType="CHAR" property="battery" />
    <result column="mileage" jdbcType="INTEGER" property="mileage" />
    <result column="battery_health" jdbcType="TINYINT" property="batteryHealth" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, vid, battery, mileage, battery_health, created_time, updated_time, is_deleted
  </sql>
  <select id="selectByExample" parameterType="com.czy.bms.entity.VehicleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from vehicle
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from vehicle
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from vehicle
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.czy.bms.entity.VehicleExample">
    delete from vehicle
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.czy.bms.entity.Vehicle">
    insert into vehicle (id, vid, battery, 
      mileage, battery_health, created_time, 
      updated_time, is_deleted)
    values (#{id,jdbcType=BIGINT}, #{vid,jdbcType=SMALLINT}, #{battery,jdbcType=CHAR}, 
      #{mileage,jdbcType=INTEGER}, #{batteryHealth,jdbcType=TINYINT}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{updatedTime,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.czy.bms.entity.Vehicle">
    insert into vehicle
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="vid != null">
        vid,
      </if>
      <if test="battery != null">
        battery,
      </if>
      <if test="mileage != null">
        mileage,
      </if>
      <if test="batteryHealth != null">
        battery_health,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="vid != null">
        #{vid,jdbcType=SMALLINT},
      </if>
      <if test="battery != null">
        #{battery,jdbcType=CHAR},
      </if>
      <if test="mileage != null">
        #{mileage,jdbcType=INTEGER},
      </if>
      <if test="batteryHealth != null">
        #{batteryHealth,jdbcType=TINYINT},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.czy.bms.entity.VehicleExample" resultType="java.lang.Long">
    select count(*) from vehicle
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update vehicle
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.vid != null">
        vid = #{record.vid,jdbcType=SMALLINT},
      </if>
      <if test="record.battery != null">
        battery = #{record.battery,jdbcType=CHAR},
      </if>
      <if test="record.mileage != null">
        mileage = #{record.mileage,jdbcType=INTEGER},
      </if>
      <if test="record.batteryHealth != null">
        battery_health = #{record.batteryHealth,jdbcType=TINYINT},
      </if>
      <if test="record.createdTime != null">
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedTime != null">
        updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update vehicle
    set id = #{record.id,jdbcType=BIGINT},
      vid = #{record.vid,jdbcType=SMALLINT},
      battery = #{record.battery,jdbcType=CHAR},
      mileage = #{record.mileage,jdbcType=INTEGER},
      battery_health = #{record.batteryHealth,jdbcType=TINYINT},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.czy.bms.entity.Vehicle">
    update vehicle
    <set>
      <if test="vid != null">
        vid = #{vid,jdbcType=SMALLINT},
      </if>
      <if test="battery != null">
        battery = #{battery,jdbcType=CHAR},
      </if>
      <if test="mileage != null">
        mileage = #{mileage,jdbcType=INTEGER},
      </if>
      <if test="batteryHealth != null">
        battery_health = #{batteryHealth,jdbcType=TINYINT},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.czy.bms.entity.Vehicle">
    update vehicle
    set vid = #{vid,jdbcType=SMALLINT},
      battery = #{battery,jdbcType=CHAR},
      mileage = #{mileage,jdbcType=INTEGER},
      battery_health = #{batteryHealth,jdbcType=TINYINT},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>